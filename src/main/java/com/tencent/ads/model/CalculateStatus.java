/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.model;


import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/** 计算状态 */
@JsonAdapter(CalculateStatus.Adapter.class)
public enum CalculateStatus {
  UNKNOWN("CALCULATE_STATUS_UNKNOWN"),

  NORMAL("CALCULATE_STATUS_NORMAL"),

  PENDING("CALCULATE_STATUS_PENDING"),

  DENIED("CALCULATE_STATUS_DENIED"),

  FROZEN("CALCULATE_STATUS_FROZEN"),

  SUSPEND("CALCULATE_STATUS_SUSPEND"),

  READY("CALCULATE_STATUS_READY"),

  ACTIVE("CALCULATE_STATUS_ACTIVE"),

  STOP("CALCULATE_STATUS_STOP"),

  NOT_READY_IMG("CALCULATE_STATUS_NOT_READY_IMG"),

  DELETED("CALCULATE_STATUS_DELETED"),

  NOT_READY_ACCT_DISABLE("CALCULATE_STATUS_NOT_READY_ACCT_DISABLE"),

  STOP_ACCT_NO_FUND("CALCULATE_STATUS_STOP_ACCT_NO_FUND"),

  STOP_ACCT_BUDGET("CALCULATE_STATUS_STOP_ACCT_BUDGET"),

  STOP_CAMP_BUDGET("CALCULATE_STATUS_STOP_CAMP_BUDGET"),

  STOP_CAMP_PAUSE("CALCULATE_STATUS_STOP_CAMP_PAUSE"),

  ACTIVE_CAMP("CALCULATE_STATUS_ACTIVE_CAMP"),

  READY_CAMP("CALCULATE_STATUS_READY_CAMP"),

  ACTIVE_ACCP("CALCULATE_STATUS_ACTIVE_ACCP"),

  READY_ACCP("CALCULATE_STATUS_READY_ACCP"),

  SPONSORLIMIT("CALCULATE_STATUS_SPONSORLIMIT"),

  ACTIVE_ACC_FROZEN("CALCULATE_STATUS_ACTIVE_ACC_FROZEN"),

  ACTIVE_ACC_EMPTY("CALCULATE_STATUS_ACTIVE_ACC_EMPTY"),

  ACTIVE_ACC_LIMIT("CALCULATE_STATUS_ACTIVE_ACC_LIMIT"),

  ACTIVE_CAM_LIMIT("CALCULATE_STATUS_ACTIVE_CAM_LIMIT"),

  ACTIVE_CAM_PAUSED("CALCULATE_STATUS_ACTIVE_CAM_PAUSED"),

  PART_ENABLE("CALCULATE_STATUS_PART_ENABLE"),

  ACTIVE_AD_LIMIT("CALCULATE_STATUS_ACTIVE_AD_LIMIT"),

  UNAUDIT_RE("CALCULATE_STATUS_UNAUDIT_RE"),

  PART_READY("CALCULATE_STATUS_PART_READY"),

  PART_ACTIVE("CALCULATE_STATUS_PART_ACTIVE"),

  PART_PREPARE("CALCULATE_STATUS_PART_PREPARE"),

  PART_INVALID("CALCULATE_STATUS_PART_INVALID"),

  WECHAT_CHANNELS_STOP("CALCULATE_STATUS_WECHAT_CHANNELS_STOP"),

  WECHAT_CHANNELS_READY("CALCULATE_STATUS_WECHAT_CHANNELS_READY"),

  LOCAL_WEPAY_PENDING("CALCULATE_STATUS_LOCAL_WEPAY_PENDING"),

  LOCAL_WEPAY_OK("CALCULATE_STATUS_LOCAL_WEPAY_OK"),

  LOCAL_WEPAY_REFUND("CALCULATE_STATUS_LOCAL_WEPAY_REFUND"),

  CAM_TOTAL_LIMIT("CALCULATE_STATUS_CAM_TOTAL_LIMIT"),

  ACTIVE_LATEOFFLINE("CALCULATE_STATUS_ACTIVE_LATEOFFLINE"),

  PART_ACTIVE_LATEOFFLINE("CALCULATE_STATUS_PART_ACTIVE_LATEOFFLINE"),

  TRACKING_URL_SUSPEND("CALCULATE_STATUS_TRACKING_URL_SUSPEND"),

  ENABLE("CALCULATE_STATUS_ENABLE"),

  EXCLUDE_DEL("CALCULATE_STATUS_EXCLUDE_DEL"),

  AD_PARTIAL_NORMAL("CALCULATE_STATUS_AD_PARTIAL_NORMAL"),

  AD_PARTIAL_PENDING("CALCULATE_STATUS_AD_PARTIAL_PENDING");

  private String value;

  CalculateStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CalculateStatus fromValue(String text) {
    for (CalculateStatus b : CalculateStatus.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<CalculateStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final CalculateStatus enumeration)
        throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CalculateStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CalculateStatus.fromValue(String.valueOf(value));
    }
  }
}
