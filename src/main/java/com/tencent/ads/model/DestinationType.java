/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.model;


import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/** 落地页类型 */
@JsonAdapter(DestinationType.Adapter.class)
public enum DestinationType {
  DEFAULT("PAGE_TYPE_DEFAULT"),

  TSA_APP("PAGE_TYPE_TSA_APP"),

  TSA_WEB_NONE_ECOMMERCE("PAGE_TYPE_TSA_WEB_NONE_ECOMMERCE"),

  CANVAS_WECHAT("PAGE_TYPE_CANVAS_WECHAT"),

  MINI_PROGRAM_WECHAT("PAGE_TYPE_MINI_PROGRAM_WECHAT"),

  FENGYE_ECOMMERCE("PAGE_TYPE_FENGYE_ECOMMERCE"),

  MINI_GAME_WECHAT("PAGE_TYPE_MINI_GAME_WECHAT"),

  MINI_PROGRAM_QQ("PAGE_TYPE_MINI_PROGRAM_QQ"),

  MINI_PROGRAM_CANVAS_WECHAT("PAGE_TYPE_MINI_PROGRAM_CANVAS_WECHAT"),

  MINI_GAME_QQ("PAGE_TYPE_MINI_GAME_QQ"),

  ARTICAL_WECHAT("PAGE_TYPE_ARTICAL_WECHAT"),

  MOMENTS_SIMPLE_NATIVE_WECHAT("PAGE_TYPE_MOMENTS_SIMPLE_NATIVE_WECHAT"),

  FULL_SCREEN_WECHAT("PAGE_TYPE_FULL_SCREEN_WECHAT");

  private String value;

  DestinationType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static DestinationType fromValue(String text) {
    for (DestinationType b : DestinationType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<DestinationType> {
    @Override
    public void write(final JsonWriter jsonWriter, final DestinationType enumeration)
        throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public DestinationType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return DestinationType.fromValue(String.valueOf(value));
    }
  }
}
