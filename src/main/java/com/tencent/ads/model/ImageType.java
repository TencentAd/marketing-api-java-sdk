/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/** 图片类型 */
@JsonAdapter(ImageType.Adapter.class)
public enum ImageType {
  IMAGE_TYPE_GIF("IMAGE_TYPE_GIF"),

  IMAGE_TYPE_JPG("IMAGE_TYPE_JPG"),

  IMAGE_TYPE_PNG("IMAGE_TYPE_PNG"),

  IMAGE_TYPE_SWF("IMAGE_TYPE_SWF"),

  IMAGE_TYPE_PSD("IMAGE_TYPE_PSD"),

  IMAGE_TYPE_BMP("IMAGE_TYPE_BMP"),

  IMAGE_TYPE_TIFF_INTEL("IMAGE_TYPE_TIFF_INTEL"),

  IMAGE_TYPE_TIFF_MOTOROLA("IMAGE_TYPE_TIFF_MOTOROLA"),

  IMAGE_TYPE_JPC("IMAGE_TYPE_JPC"),

  IMAGE_TYPE_JP2("IMAGE_TYPE_JP2"),

  IMAGE_TYPE_JPX("IMAGE_TYPE_JPX"),

  IMAGE_TYPE_JB2("IMAGE_TYPE_JB2"),

  IMAGE_TYPE_SWC("IMAGE_TYPE_SWC"),

  IMAGE_TYPE_IFF("IMAGE_TYPE_IFF"),

  IMAGE_TYPE_WBMP("IMAGE_TYPE_WBMP"),

  IMAGE_TYPE_XBM("IMAGE_TYPE_XBM"),

  IMAGE_TYPE_WEBP("IMAGE_TYPE_WEBP"),

  IMAGE_TYPE_FLV("IMAGE_TYPE_FLV"),

  IMAGE_TYPE_WAV("IMAGE_TYPE_WAV"),

  IMAGE_TYPE_MP3("IMAGE_TYPE_MP3"),

  IMAGE_TYPE_MP4("IMAGE_TYPE_MP4"),

  IMAGE_TYPE_AVI("IMAGE_TYPE_AVI"),

  IMAGE_TYPE_MOV("IMAGE_TYPE_MOV"),

  TYPE_GIF("TYPE_GIF"),

  TYPE_JPG("TYPE_JPG"),

  TYPE_PNG("TYPE_PNG"),

  TYPE_SWF("TYPE_SWF"),

  TYPE_PSD("TYPE_PSD"),

  TYPE_BMP("TYPE_BMP"),

  TYPE_TIFF_INTEL("TYPE_TIFF_INTEL"),

  TYPE_TIFF_MOTOROLA("TYPE_TIFF_MOTOROLA"),

  TYPE_JPC("TYPE_JPC"),

  TYPE_JP2("TYPE_JP2"),

  TYPE_JPX("TYPE_JPX"),

  TYPE_JB2("TYPE_JB2"),

  TYPE_SWC("TYPE_SWC"),

  TYPE_IFF("TYPE_IFF"),

  TYPE_WBMP("TYPE_WBMP"),

  TYPE_XBM("TYPE_XBM"),

  TYPE_WEBP("TYPE_WEBP"),

  TYPE_FLV("TYPE_FLV"),

  TYPE_WAV("TYPE_WAV"),

  TYPE_MP3("TYPE_MP3"),

  TYPE_MP4("TYPE_MP4"),

  TYPE_AVI("TYPE_AVI"),

  TYPE_MOV("TYPE_MOV");

  private String value;

  ImageType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ImageType fromValue(String text) {
    for (ImageType b : ImageType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<ImageType> {
    @Override
    public void write(final JsonWriter jsonWriter, final ImageType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ImageType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ImageType.fromValue(String.valueOf(value));
    }
  }
}
