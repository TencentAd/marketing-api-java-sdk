/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 3.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.model.v3;


import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/** 国内拍摄地 */
@JsonAdapter(TourPlaceDomestic.Adapter.class)
public enum TourPlaceDomestic {
  SANYA("TOUR_PLACE_DOMESTIC_SANYA"),

  CHANGSHA("TOUR_PLACE_DOMESTIC_CHANGSHA"),

  XIAMEN("TOUR_PLACE_DOMESTIC_XIAMEN"),

  QINGDAO("TOUR_PLACE_DOMESTIC_QINGDAO"),

  LIJIANG("TOUR_PLACE_DOMESTIC_LIJIANG"),

  DALI("TOUR_PLACE_DOMESTIC_DALI"),

  DALIAN("TOUR_PLACE_DOMESTIC_DALIAN"),

  HK("TOUR_PLACE_DOMESTIC_HK"),

  TAIWAN("TOUR_PLACE_DOMESTIC_TAIWAN"),

  AOMEN("TOUR_PLACE_DOMESTIC_AOMEN"),

  XIANGGELILA("TOUR_PLACE_DOMESTIC_XIANGGELILA"),

  QINGHAI("TOUR_PLACE_DOMESTIC_QINGHAI"),

  XIZANG("TOUR_PLACE_DOMESTIC_XIZANG"),

  DAOCHENG("TOUR_PLACE_DOMESTIC_DAOCHENG"),

  CHONGQING("TOUR_PLACE_DOMESTIC_CHONGQING"),

  SUZHOU("TOUR_PLACE_DOMESTIC_SUZHOU"),

  SHANGHAI("TOUR_PLACE_DOMESTIC_SHANGHAI"),

  HANGZHOU("TOUR_PLACE_DOMESTIC_HANGZHOU"),

  SHENZHEN("TOUR_PLACE_DOMESTIC_SHENZHEN"),

  GUANGZHOU("TOUR_PLACE_DOMESTIC_GUANGZHOU"),

  BEIJING("TOUR_PLACE_DOMESTIC_BEIJING"),

  XIAN("TOUR_PLACE_DOMESTIC_XIAN"),

  CHENGDU("TOUR_PLACE_DOMESTIC_CHENGDU"),

  BEIHAI("TOUR_PLACE_DOMESTIC_BEIHAI"),

  GUILIN("TOUR_PLACE_DOMESTIC_GUILIN"),

  WUHAN("TOUR_PLACE_DOMESTIC_WUHAN"),

  NANJING("TOUR_PLACE_DOMESTIC_NANJING"),

  HAIKOU("TOUR_PLACE_DOMESTIC_HAIKOU");

  private String value;

  TourPlaceDomestic(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TourPlaceDomestic fromValue(String text) {
    for (TourPlaceDomestic b : TourPlaceDomestic.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<TourPlaceDomestic> {
    @Override
    public void write(final JsonWriter jsonWriter, final TourPlaceDomestic enumeration)
        throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TourPlaceDomestic read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TourPlaceDomestic.fromValue(String.valueOf(value));
    }
  }
}
