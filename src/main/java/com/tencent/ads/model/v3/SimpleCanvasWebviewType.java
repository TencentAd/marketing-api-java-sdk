/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 3.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.model.v3;


import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/** 简版原生页内嵌落地页类型 */
@JsonAdapter(SimpleCanvasWebviewType.Adapter.class)
public enum SimpleCanvasWebviewType {
  UNKNOWN("SIMPLE_CANVAS_WEBVIEW_TYPE_UNKNOWN"),

  XJ_ANDROID_APP_H5("SIMPLE_CANVAS_WEBVIEW_TYPE_XJ_ANDROID_APP_H5"),

  XJ_IOS_APP_H5("SIMPLE_CANVAS_WEBVIEW_TYPE_XJ_IOS_APP_H5"),

  XJ_WEBSITE_H5("SIMPLE_CANVAS_WEBVIEW_TYPE_XJ_WEBSITE_H5"),

  WECHAT_OFFICIAL_ACCOUNT_DETAIL("SIMPLE_CANVAS_WEBVIEW_TYPE_WECHAT_OFFICIAL_ACCOUNT_DETAIL"),

  FENGYE_ECOMMERCE("SIMPLE_CANVAS_WEBVIEW_TYPE_FENGYE_ECOMMERCE"),

  WECHAT_OFFICIAL_ACCOUNT_ARTICLE("SIMPLE_CANVAS_WEBVIEW_TYPE_WECHAT_OFFICIAL_ACCOUNT_ARTICLE");

  private String value;

  SimpleCanvasWebviewType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static SimpleCanvasWebviewType fromValue(String text) {
    for (SimpleCanvasWebviewType b : SimpleCanvasWebviewType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<SimpleCanvasWebviewType> {
    @Override
    public void write(final JsonWriter jsonWriter, final SimpleCanvasWebviewType enumeration)
        throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public SimpleCanvasWebviewType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return SimpleCanvasWebviewType.fromValue(String.valueOf(value));
    }
  }
}
