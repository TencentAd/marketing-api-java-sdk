/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 3.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.model.v3;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** 商品类目 */
@ApiModel(description = "商品类目")
public class CategoryItem {
  @SerializedName("category_id")
  private Long categoryId = null;

  @SerializedName("category_name")
  private String categoryName = null;

  @SerializedName("parent_category_id")
  private Long parentCategoryId = null;

  @SerializedName("level")
  private Long level = null;

  @SerializedName("category_path")
  private List<CategoryPathsItem> categoryPath = null;

  public CategoryItem categoryId(Long categoryId) {
    this.categoryId = categoryId;
    return this;
  }

  /**
   * Get categoryId
   *
   * @return categoryId
   */
  @ApiModelProperty(value = "")
  public Long getCategoryId() {
    return categoryId;
  }

  public void setCategoryId(Long categoryId) {
    this.categoryId = categoryId;
  }

  public CategoryItem categoryName(String categoryName) {
    this.categoryName = categoryName;
    return this;
  }

  /**
   * Get categoryName
   *
   * @return categoryName
   */
  @ApiModelProperty(value = "")
  public String getCategoryName() {
    return categoryName;
  }

  public void setCategoryName(String categoryName) {
    this.categoryName = categoryName;
  }

  public CategoryItem parentCategoryId(Long parentCategoryId) {
    this.parentCategoryId = parentCategoryId;
    return this;
  }

  /**
   * Get parentCategoryId
   *
   * @return parentCategoryId
   */
  @ApiModelProperty(value = "")
  public Long getParentCategoryId() {
    return parentCategoryId;
  }

  public void setParentCategoryId(Long parentCategoryId) {
    this.parentCategoryId = parentCategoryId;
  }

  public CategoryItem level(Long level) {
    this.level = level;
    return this;
  }

  /**
   * Get level
   *
   * @return level
   */
  @ApiModelProperty(value = "")
  public Long getLevel() {
    return level;
  }

  public void setLevel(Long level) {
    this.level = level;
  }

  public CategoryItem categoryPath(List<CategoryPathsItem> categoryPath) {
    this.categoryPath = categoryPath;
    return this;
  }

  public CategoryItem addCategoryPathItem(CategoryPathsItem categoryPathItem) {
    if (this.categoryPath == null) {
      this.categoryPath = new ArrayList<CategoryPathsItem>();
    }
    this.categoryPath.add(categoryPathItem);
    return this;
  }

  /**
   * Get categoryPath
   *
   * @return categoryPath
   */
  @ApiModelProperty(value = "")
  public List<CategoryPathsItem> getCategoryPath() {
    return categoryPath;
  }

  public void setCategoryPath(List<CategoryPathsItem> categoryPath) {
    this.categoryPath = categoryPath;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CategoryItem categoryItem = (CategoryItem) o;
    return Objects.equals(this.categoryId, categoryItem.categoryId)
        && Objects.equals(this.categoryName, categoryItem.categoryName)
        && Objects.equals(this.parentCategoryId, categoryItem.parentCategoryId)
        && Objects.equals(this.level, categoryItem.level)
        && Objects.equals(this.categoryPath, categoryItem.categoryPath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryId, categoryName, parentCategoryId, level, categoryPath);
  }

  @Override
  public String toString() {
    Gson gson = new Gson();
    return gson.toJson(this);
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
