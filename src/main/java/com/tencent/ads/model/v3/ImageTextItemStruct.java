/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 3.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.model.v3;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/** 图文复合组件配置 */
@ApiModel(description = "图文复合组件配置")
public class ImageTextItemStruct {
  @SerializedName("border_color")
  private String borderColor = null;

  @SerializedName("title_color")
  private String titleColor = null;

  @SerializedName("desc_color")
  private String descColor = null;

  @SerializedName("bg_color")
  private String bgColor = null;

  @SerializedName("jump_mode")
  private CanvasImageTextJumpMode jumpMode = null;

  @SerializedName("material_id")
  private String materialId = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("desc")
  private String desc = null;

  @SerializedName("sub_elem_type")
  private CanvasImageTextElementType subElemType = null;

  @SerializedName("gh_spec")
  private FloatGhSpec ghSpec = null;

  @SerializedName("enterprise_wx_spec")
  private FloatEnterpriseWxSpec enterpriseWxSpec = null;

  public ImageTextItemStruct borderColor(String borderColor) {
    this.borderColor = borderColor;
    return this;
  }

  /**
   * Get borderColor
   *
   * @return borderColor
   */
  @ApiModelProperty(value = "")
  public String getBorderColor() {
    return borderColor;
  }

  public void setBorderColor(String borderColor) {
    this.borderColor = borderColor;
  }

  public ImageTextItemStruct titleColor(String titleColor) {
    this.titleColor = titleColor;
    return this;
  }

  /**
   * Get titleColor
   *
   * @return titleColor
   */
  @ApiModelProperty(value = "")
  public String getTitleColor() {
    return titleColor;
  }

  public void setTitleColor(String titleColor) {
    this.titleColor = titleColor;
  }

  public ImageTextItemStruct descColor(String descColor) {
    this.descColor = descColor;
    return this;
  }

  /**
   * Get descColor
   *
   * @return descColor
   */
  @ApiModelProperty(value = "")
  public String getDescColor() {
    return descColor;
  }

  public void setDescColor(String descColor) {
    this.descColor = descColor;
  }

  public ImageTextItemStruct bgColor(String bgColor) {
    this.bgColor = bgColor;
    return this;
  }

  /**
   * Get bgColor
   *
   * @return bgColor
   */
  @ApiModelProperty(value = "")
  public String getBgColor() {
    return bgColor;
  }

  public void setBgColor(String bgColor) {
    this.bgColor = bgColor;
  }

  public ImageTextItemStruct jumpMode(CanvasImageTextJumpMode jumpMode) {
    this.jumpMode = jumpMode;
    return this;
  }

  /**
   * Get jumpMode
   *
   * @return jumpMode
   */
  @ApiModelProperty(value = "")
  public CanvasImageTextJumpMode getJumpMode() {
    return jumpMode;
  }

  public void setJumpMode(CanvasImageTextJumpMode jumpMode) {
    this.jumpMode = jumpMode;
  }

  public ImageTextItemStruct materialId(String materialId) {
    this.materialId = materialId;
    return this;
  }

  /**
   * Get materialId
   *
   * @return materialId
   */
  @ApiModelProperty(value = "")
  public String getMaterialId() {
    return materialId;
  }

  public void setMaterialId(String materialId) {
    this.materialId = materialId;
  }

  public ImageTextItemStruct title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   *
   * @return title
   */
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ImageTextItemStruct desc(String desc) {
    this.desc = desc;
    return this;
  }

  /**
   * Get desc
   *
   * @return desc
   */
  @ApiModelProperty(value = "")
  public String getDesc() {
    return desc;
  }

  public void setDesc(String desc) {
    this.desc = desc;
  }

  public ImageTextItemStruct subElemType(CanvasImageTextElementType subElemType) {
    this.subElemType = subElemType;
    return this;
  }

  /**
   * Get subElemType
   *
   * @return subElemType
   */
  @ApiModelProperty(value = "")
  public CanvasImageTextElementType getSubElemType() {
    return subElemType;
  }

  public void setSubElemType(CanvasImageTextElementType subElemType) {
    this.subElemType = subElemType;
  }

  public ImageTextItemStruct ghSpec(FloatGhSpec ghSpec) {
    this.ghSpec = ghSpec;
    return this;
  }

  /**
   * Get ghSpec
   *
   * @return ghSpec
   */
  @ApiModelProperty(value = "")
  public FloatGhSpec getGhSpec() {
    return ghSpec;
  }

  public void setGhSpec(FloatGhSpec ghSpec) {
    this.ghSpec = ghSpec;
  }

  public ImageTextItemStruct enterpriseWxSpec(FloatEnterpriseWxSpec enterpriseWxSpec) {
    this.enterpriseWxSpec = enterpriseWxSpec;
    return this;
  }

  /**
   * Get enterpriseWxSpec
   *
   * @return enterpriseWxSpec
   */
  @ApiModelProperty(value = "")
  public FloatEnterpriseWxSpec getEnterpriseWxSpec() {
    return enterpriseWxSpec;
  }

  public void setEnterpriseWxSpec(FloatEnterpriseWxSpec enterpriseWxSpec) {
    this.enterpriseWxSpec = enterpriseWxSpec;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageTextItemStruct imageTextItemStruct = (ImageTextItemStruct) o;
    return Objects.equals(this.borderColor, imageTextItemStruct.borderColor)
        && Objects.equals(this.titleColor, imageTextItemStruct.titleColor)
        && Objects.equals(this.descColor, imageTextItemStruct.descColor)
        && Objects.equals(this.bgColor, imageTextItemStruct.bgColor)
        && Objects.equals(this.jumpMode, imageTextItemStruct.jumpMode)
        && Objects.equals(this.materialId, imageTextItemStruct.materialId)
        && Objects.equals(this.title, imageTextItemStruct.title)
        && Objects.equals(this.desc, imageTextItemStruct.desc)
        && Objects.equals(this.subElemType, imageTextItemStruct.subElemType)
        && Objects.equals(this.ghSpec, imageTextItemStruct.ghSpec)
        && Objects.equals(this.enterpriseWxSpec, imageTextItemStruct.enterpriseWxSpec);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        borderColor,
        titleColor,
        descColor,
        bgColor,
        jumpMode,
        materialId,
        title,
        desc,
        subElemType,
        ghSpec,
        enterpriseWxSpec);
  }

  @Override
  public String toString() {
    Gson gson = new Gson();
    return gson.toJson(this);
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
