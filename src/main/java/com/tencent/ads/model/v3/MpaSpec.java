/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 3.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.model.v3;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** 动态商品广告属性 */
@ApiModel(description = "动态商品广告属性")
public class MpaSpec {
  @SerializedName("recommend_method")
  private List<Long> recommendMethod = null;

  public MpaSpec recommendMethod(List<Long> recommendMethod) {
    this.recommendMethod = recommendMethod;
    return this;
  }

  public MpaSpec addRecommendMethodItem(Long recommendMethodItem) {
    if (this.recommendMethod == null) {
      this.recommendMethod = new ArrayList<Long>();
    }
    this.recommendMethod.add(recommendMethodItem);
    return this;
  }

  /**
   * Get recommendMethod
   *
   * @return recommendMethod
   */
  @ApiModelProperty(value = "")
  public List<Long> getRecommendMethod() {
    return recommendMethod;
  }

  public void setRecommendMethod(List<Long> recommendMethod) {
    this.recommendMethod = recommendMethod;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MpaSpec mpaSpec = (MpaSpec) o;
    return Objects.equals(this.recommendMethod, mpaSpec.recommendMethod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recommendMethod);
  }

  @Override
  public String toString() {
    Gson gson = new Gson();
    return gson.toJson(this);
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
