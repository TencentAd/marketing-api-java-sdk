/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 3.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.model.v3;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/** 推荐词信息 */
@ApiModel(description = "推荐词信息")
public class RecommendWordStructs {
  @SerializedName("word")
  private String word = null;

  @SerializedName("month_query_count")
  private Long monthQueryCount = null;

  @SerializedName("click_count")
  private Long clickCount = null;

  @SerializedName("price")
  private Double price = null;

  @SerializedName("total_accts")
  private Long totalAccts = null;

  @SerializedName("recommend_reason")
  private String recommendReason = null;

  public RecommendWordStructs word(String word) {
    this.word = word;
    return this;
  }

  /**
   * Get word
   *
   * @return word
   */
  @ApiModelProperty(value = "")
  public String getWord() {
    return word;
  }

  public void setWord(String word) {
    this.word = word;
  }

  public RecommendWordStructs monthQueryCount(Long monthQueryCount) {
    this.monthQueryCount = monthQueryCount;
    return this;
  }

  /**
   * Get monthQueryCount
   *
   * @return monthQueryCount
   */
  @ApiModelProperty(value = "")
  public Long getMonthQueryCount() {
    return monthQueryCount;
  }

  public void setMonthQueryCount(Long monthQueryCount) {
    this.monthQueryCount = monthQueryCount;
  }

  public RecommendWordStructs clickCount(Long clickCount) {
    this.clickCount = clickCount;
    return this;
  }

  /**
   * Get clickCount
   *
   * @return clickCount
   */
  @ApiModelProperty(value = "")
  public Long getClickCount() {
    return clickCount;
  }

  public void setClickCount(Long clickCount) {
    this.clickCount = clickCount;
  }

  public RecommendWordStructs price(Double price) {
    this.price = price;
    return this;
  }

  /**
   * Get price
   *
   * @return price
   */
  @ApiModelProperty(value = "")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public RecommendWordStructs totalAccts(Long totalAccts) {
    this.totalAccts = totalAccts;
    return this;
  }

  /**
   * Get totalAccts
   *
   * @return totalAccts
   */
  @ApiModelProperty(value = "")
  public Long getTotalAccts() {
    return totalAccts;
  }

  public void setTotalAccts(Long totalAccts) {
    this.totalAccts = totalAccts;
  }

  public RecommendWordStructs recommendReason(String recommendReason) {
    this.recommendReason = recommendReason;
    return this;
  }

  /**
   * Get recommendReason
   *
   * @return recommendReason
   */
  @ApiModelProperty(value = "")
  public String getRecommendReason() {
    return recommendReason;
  }

  public void setRecommendReason(String recommendReason) {
    this.recommendReason = recommendReason;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecommendWordStructs recommendWordStructs = (RecommendWordStructs) o;
    return Objects.equals(this.word, recommendWordStructs.word)
        && Objects.equals(this.monthQueryCount, recommendWordStructs.monthQueryCount)
        && Objects.equals(this.clickCount, recommendWordStructs.clickCount)
        && Objects.equals(this.price, recommendWordStructs.price)
        && Objects.equals(this.totalAccts, recommendWordStructs.totalAccts)
        && Objects.equals(this.recommendReason, recommendWordStructs.recommendReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(word, monthQueryCount, clickCount, price, totalAccts, recommendReason);
  }

  @Override
  public String toString() {
    Gson gson = new Gson();
    return gson.toJson(this);
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
