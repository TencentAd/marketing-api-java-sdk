/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 3.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.model.v3;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** 侧边悬浮按钮组件配置 */
@ApiModel(description = "侧边悬浮按钮组件配置")
public class RightFixedButtonConfig {
  @SerializedName("background_color")
  private String backgroundColor = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("content")
  private List<CompRightFixedButtonContent> content = null;

  public RightFixedButtonConfig backgroundColor(String backgroundColor) {
    this.backgroundColor = backgroundColor;
    return this;
  }

  /**
   * Get backgroundColor
   *
   * @return backgroundColor
   */
  @ApiModelProperty(value = "")
  public String getBackgroundColor() {
    return backgroundColor;
  }

  public void setBackgroundColor(String backgroundColor) {
    this.backgroundColor = backgroundColor;
  }

  public RightFixedButtonConfig type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   *
   * @return type
   */
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public RightFixedButtonConfig content(List<CompRightFixedButtonContent> content) {
    this.content = content;
    return this;
  }

  public RightFixedButtonConfig addContentItem(CompRightFixedButtonContent contentItem) {
    if (this.content == null) {
      this.content = new ArrayList<CompRightFixedButtonContent>();
    }
    this.content.add(contentItem);
    return this;
  }

  /**
   * Get content
   *
   * @return content
   */
  @ApiModelProperty(value = "")
  public List<CompRightFixedButtonContent> getContent() {
    return content;
  }

  public void setContent(List<CompRightFixedButtonContent> content) {
    this.content = content;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RightFixedButtonConfig rightFixedButtonConfig = (RightFixedButtonConfig) o;
    return Objects.equals(this.backgroundColor, rightFixedButtonConfig.backgroundColor)
        && Objects.equals(this.type, rightFixedButtonConfig.type)
        && Objects.equals(this.content, rightFixedButtonConfig.content);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backgroundColor, type, content);
  }

  @Override
  public String toString() {
    Gson gson = new Gson();
    return gson.toJson(this);
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
