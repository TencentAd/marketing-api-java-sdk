/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 3.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.model.v3;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** 创意组件 */
@ApiModel(description = "创意组件")
public class CreativeComponents {
  @SerializedName("title")
  private List<TitleComponent> title = null;

  @SerializedName("description")
  private List<DescriptionComponent> description = null;

  @SerializedName("image")
  private List<ImageComponent> image = null;

  @SerializedName("image_list")
  private List<ImageListComponent> imageList = null;

  @SerializedName("video")
  private List<VideoComponent> video = null;

  @SerializedName("brand")
  private List<BrandComponent> brand = null;

  @SerializedName("consult")
  private List<ConsultComponent> consult = null;

  @SerializedName("phone")
  private List<PhoneComponent> phone = null;

  @SerializedName("form")
  private List<FormComponent> form = null;

  @SerializedName("action_button")
  private List<ActionButtonComponent> actionButton = null;

  @SerializedName("chosen_button")
  private List<ChosenButtonComponent> chosenButton = null;

  @SerializedName("label")
  private List<LabelComponent> label = null;

  @SerializedName("show_data")
  private List<ShowDataComponent> showData = null;

  @SerializedName("marketing_pendant")
  private List<MarketingPendantComponent> marketingPendant = null;

  @SerializedName("app_gift_pack_code")
  private List<AppGiftPackCodeComponent> appGiftPackCode = null;

  @SerializedName("shop_image")
  private List<ShopImageComponent> shopImage = null;

  @SerializedName("count_down")
  private List<CountDownComponent> countDown = null;

  @SerializedName("barrage")
  private List<BarrageComponent> barrage = null;

  @SerializedName("floating_zone")
  private List<FloatingZoneComponent> floatingZone = null;

  @SerializedName("text_link")
  private List<TextLinkComponent> textLink = null;

  @SerializedName("jump_info")
  private List<JumpinfoComponent> jumpInfo = null;

  @SerializedName("end_page")
  private List<EndPageComponent> endPage = null;

  @SerializedName("living_desc")
  private List<LivingDescComponent> livingDesc = null;

  @SerializedName("wechat_channels")
  private List<WechatChannelsComponent> wechatChannels = null;

  @SerializedName("short_video")
  private List<ShortVideoComponent> shortVideo = null;

  @SerializedName("element_story")
  private List<ElementStoryComponent> elementStory = null;

  @SerializedName("wxgame_playable_page")
  private List<WxgamePlayablePageComponent> wxgamePlayablePage = null;

  public CreativeComponents title(List<TitleComponent> title) {
    this.title = title;
    return this;
  }

  public CreativeComponents addTitleItem(TitleComponent titleItem) {
    if (this.title == null) {
      this.title = new ArrayList<TitleComponent>();
    }
    this.title.add(titleItem);
    return this;
  }

  /**
   * Get title
   *
   * @return title
   */
  @ApiModelProperty(value = "")
  public List<TitleComponent> getTitle() {
    return title;
  }

  public void setTitle(List<TitleComponent> title) {
    this.title = title;
  }

  public CreativeComponents description(List<DescriptionComponent> description) {
    this.description = description;
    return this;
  }

  public CreativeComponents addDescriptionItem(DescriptionComponent descriptionItem) {
    if (this.description == null) {
      this.description = new ArrayList<DescriptionComponent>();
    }
    this.description.add(descriptionItem);
    return this;
  }

  /**
   * Get description
   *
   * @return description
   */
  @ApiModelProperty(value = "")
  public List<DescriptionComponent> getDescription() {
    return description;
  }

  public void setDescription(List<DescriptionComponent> description) {
    this.description = description;
  }

  public CreativeComponents image(List<ImageComponent> image) {
    this.image = image;
    return this;
  }

  public CreativeComponents addImageItem(ImageComponent imageItem) {
    if (this.image == null) {
      this.image = new ArrayList<ImageComponent>();
    }
    this.image.add(imageItem);
    return this;
  }

  /**
   * Get image
   *
   * @return image
   */
  @ApiModelProperty(value = "")
  public List<ImageComponent> getImage() {
    return image;
  }

  public void setImage(List<ImageComponent> image) {
    this.image = image;
  }

  public CreativeComponents imageList(List<ImageListComponent> imageList) {
    this.imageList = imageList;
    return this;
  }

  public CreativeComponents addImageListItem(ImageListComponent imageListItem) {
    if (this.imageList == null) {
      this.imageList = new ArrayList<ImageListComponent>();
    }
    this.imageList.add(imageListItem);
    return this;
  }

  /**
   * Get imageList
   *
   * @return imageList
   */
  @ApiModelProperty(value = "")
  public List<ImageListComponent> getImageList() {
    return imageList;
  }

  public void setImageList(List<ImageListComponent> imageList) {
    this.imageList = imageList;
  }

  public CreativeComponents video(List<VideoComponent> video) {
    this.video = video;
    return this;
  }

  public CreativeComponents addVideoItem(VideoComponent videoItem) {
    if (this.video == null) {
      this.video = new ArrayList<VideoComponent>();
    }
    this.video.add(videoItem);
    return this;
  }

  /**
   * Get video
   *
   * @return video
   */
  @ApiModelProperty(value = "")
  public List<VideoComponent> getVideo() {
    return video;
  }

  public void setVideo(List<VideoComponent> video) {
    this.video = video;
  }

  public CreativeComponents brand(List<BrandComponent> brand) {
    this.brand = brand;
    return this;
  }

  public CreativeComponents addBrandItem(BrandComponent brandItem) {
    if (this.brand == null) {
      this.brand = new ArrayList<BrandComponent>();
    }
    this.brand.add(brandItem);
    return this;
  }

  /**
   * Get brand
   *
   * @return brand
   */
  @ApiModelProperty(value = "")
  public List<BrandComponent> getBrand() {
    return brand;
  }

  public void setBrand(List<BrandComponent> brand) {
    this.brand = brand;
  }

  public CreativeComponents consult(List<ConsultComponent> consult) {
    this.consult = consult;
    return this;
  }

  public CreativeComponents addConsultItem(ConsultComponent consultItem) {
    if (this.consult == null) {
      this.consult = new ArrayList<ConsultComponent>();
    }
    this.consult.add(consultItem);
    return this;
  }

  /**
   * Get consult
   *
   * @return consult
   */
  @ApiModelProperty(value = "")
  public List<ConsultComponent> getConsult() {
    return consult;
  }

  public void setConsult(List<ConsultComponent> consult) {
    this.consult = consult;
  }

  public CreativeComponents phone(List<PhoneComponent> phone) {
    this.phone = phone;
    return this;
  }

  public CreativeComponents addPhoneItem(PhoneComponent phoneItem) {
    if (this.phone == null) {
      this.phone = new ArrayList<PhoneComponent>();
    }
    this.phone.add(phoneItem);
    return this;
  }

  /**
   * Get phone
   *
   * @return phone
   */
  @ApiModelProperty(value = "")
  public List<PhoneComponent> getPhone() {
    return phone;
  }

  public void setPhone(List<PhoneComponent> phone) {
    this.phone = phone;
  }

  public CreativeComponents form(List<FormComponent> form) {
    this.form = form;
    return this;
  }

  public CreativeComponents addFormItem(FormComponent formItem) {
    if (this.form == null) {
      this.form = new ArrayList<FormComponent>();
    }
    this.form.add(formItem);
    return this;
  }

  /**
   * Get form
   *
   * @return form
   */
  @ApiModelProperty(value = "")
  public List<FormComponent> getForm() {
    return form;
  }

  public void setForm(List<FormComponent> form) {
    this.form = form;
  }

  public CreativeComponents actionButton(List<ActionButtonComponent> actionButton) {
    this.actionButton = actionButton;
    return this;
  }

  public CreativeComponents addActionButtonItem(ActionButtonComponent actionButtonItem) {
    if (this.actionButton == null) {
      this.actionButton = new ArrayList<ActionButtonComponent>();
    }
    this.actionButton.add(actionButtonItem);
    return this;
  }

  /**
   * Get actionButton
   *
   * @return actionButton
   */
  @ApiModelProperty(value = "")
  public List<ActionButtonComponent> getActionButton() {
    return actionButton;
  }

  public void setActionButton(List<ActionButtonComponent> actionButton) {
    this.actionButton = actionButton;
  }

  public CreativeComponents chosenButton(List<ChosenButtonComponent> chosenButton) {
    this.chosenButton = chosenButton;
    return this;
  }

  public CreativeComponents addChosenButtonItem(ChosenButtonComponent chosenButtonItem) {
    if (this.chosenButton == null) {
      this.chosenButton = new ArrayList<ChosenButtonComponent>();
    }
    this.chosenButton.add(chosenButtonItem);
    return this;
  }

  /**
   * Get chosenButton
   *
   * @return chosenButton
   */
  @ApiModelProperty(value = "")
  public List<ChosenButtonComponent> getChosenButton() {
    return chosenButton;
  }

  public void setChosenButton(List<ChosenButtonComponent> chosenButton) {
    this.chosenButton = chosenButton;
  }

  public CreativeComponents label(List<LabelComponent> label) {
    this.label = label;
    return this;
  }

  public CreativeComponents addLabelItem(LabelComponent labelItem) {
    if (this.label == null) {
      this.label = new ArrayList<LabelComponent>();
    }
    this.label.add(labelItem);
    return this;
  }

  /**
   * Get label
   *
   * @return label
   */
  @ApiModelProperty(value = "")
  public List<LabelComponent> getLabel() {
    return label;
  }

  public void setLabel(List<LabelComponent> label) {
    this.label = label;
  }

  public CreativeComponents showData(List<ShowDataComponent> showData) {
    this.showData = showData;
    return this;
  }

  public CreativeComponents addShowDataItem(ShowDataComponent showDataItem) {
    if (this.showData == null) {
      this.showData = new ArrayList<ShowDataComponent>();
    }
    this.showData.add(showDataItem);
    return this;
  }

  /**
   * Get showData
   *
   * @return showData
   */
  @ApiModelProperty(value = "")
  public List<ShowDataComponent> getShowData() {
    return showData;
  }

  public void setShowData(List<ShowDataComponent> showData) {
    this.showData = showData;
  }

  public CreativeComponents marketingPendant(List<MarketingPendantComponent> marketingPendant) {
    this.marketingPendant = marketingPendant;
    return this;
  }

  public CreativeComponents addMarketingPendantItem(
      MarketingPendantComponent marketingPendantItem) {
    if (this.marketingPendant == null) {
      this.marketingPendant = new ArrayList<MarketingPendantComponent>();
    }
    this.marketingPendant.add(marketingPendantItem);
    return this;
  }

  /**
   * Get marketingPendant
   *
   * @return marketingPendant
   */
  @ApiModelProperty(value = "")
  public List<MarketingPendantComponent> getMarketingPendant() {
    return marketingPendant;
  }

  public void setMarketingPendant(List<MarketingPendantComponent> marketingPendant) {
    this.marketingPendant = marketingPendant;
  }

  public CreativeComponents appGiftPackCode(List<AppGiftPackCodeComponent> appGiftPackCode) {
    this.appGiftPackCode = appGiftPackCode;
    return this;
  }

  public CreativeComponents addAppGiftPackCodeItem(AppGiftPackCodeComponent appGiftPackCodeItem) {
    if (this.appGiftPackCode == null) {
      this.appGiftPackCode = new ArrayList<AppGiftPackCodeComponent>();
    }
    this.appGiftPackCode.add(appGiftPackCodeItem);
    return this;
  }

  /**
   * Get appGiftPackCode
   *
   * @return appGiftPackCode
   */
  @ApiModelProperty(value = "")
  public List<AppGiftPackCodeComponent> getAppGiftPackCode() {
    return appGiftPackCode;
  }

  public void setAppGiftPackCode(List<AppGiftPackCodeComponent> appGiftPackCode) {
    this.appGiftPackCode = appGiftPackCode;
  }

  public CreativeComponents shopImage(List<ShopImageComponent> shopImage) {
    this.shopImage = shopImage;
    return this;
  }

  public CreativeComponents addShopImageItem(ShopImageComponent shopImageItem) {
    if (this.shopImage == null) {
      this.shopImage = new ArrayList<ShopImageComponent>();
    }
    this.shopImage.add(shopImageItem);
    return this;
  }

  /**
   * Get shopImage
   *
   * @return shopImage
   */
  @ApiModelProperty(value = "")
  public List<ShopImageComponent> getShopImage() {
    return shopImage;
  }

  public void setShopImage(List<ShopImageComponent> shopImage) {
    this.shopImage = shopImage;
  }

  public CreativeComponents countDown(List<CountDownComponent> countDown) {
    this.countDown = countDown;
    return this;
  }

  public CreativeComponents addCountDownItem(CountDownComponent countDownItem) {
    if (this.countDown == null) {
      this.countDown = new ArrayList<CountDownComponent>();
    }
    this.countDown.add(countDownItem);
    return this;
  }

  /**
   * Get countDown
   *
   * @return countDown
   */
  @ApiModelProperty(value = "")
  public List<CountDownComponent> getCountDown() {
    return countDown;
  }

  public void setCountDown(List<CountDownComponent> countDown) {
    this.countDown = countDown;
  }

  public CreativeComponents barrage(List<BarrageComponent> barrage) {
    this.barrage = barrage;
    return this;
  }

  public CreativeComponents addBarrageItem(BarrageComponent barrageItem) {
    if (this.barrage == null) {
      this.barrage = new ArrayList<BarrageComponent>();
    }
    this.barrage.add(barrageItem);
    return this;
  }

  /**
   * Get barrage
   *
   * @return barrage
   */
  @ApiModelProperty(value = "")
  public List<BarrageComponent> getBarrage() {
    return barrage;
  }

  public void setBarrage(List<BarrageComponent> barrage) {
    this.barrage = barrage;
  }

  public CreativeComponents floatingZone(List<FloatingZoneComponent> floatingZone) {
    this.floatingZone = floatingZone;
    return this;
  }

  public CreativeComponents addFloatingZoneItem(FloatingZoneComponent floatingZoneItem) {
    if (this.floatingZone == null) {
      this.floatingZone = new ArrayList<FloatingZoneComponent>();
    }
    this.floatingZone.add(floatingZoneItem);
    return this;
  }

  /**
   * Get floatingZone
   *
   * @return floatingZone
   */
  @ApiModelProperty(value = "")
  public List<FloatingZoneComponent> getFloatingZone() {
    return floatingZone;
  }

  public void setFloatingZone(List<FloatingZoneComponent> floatingZone) {
    this.floatingZone = floatingZone;
  }

  public CreativeComponents textLink(List<TextLinkComponent> textLink) {
    this.textLink = textLink;
    return this;
  }

  public CreativeComponents addTextLinkItem(TextLinkComponent textLinkItem) {
    if (this.textLink == null) {
      this.textLink = new ArrayList<TextLinkComponent>();
    }
    this.textLink.add(textLinkItem);
    return this;
  }

  /**
   * Get textLink
   *
   * @return textLink
   */
  @ApiModelProperty(value = "")
  public List<TextLinkComponent> getTextLink() {
    return textLink;
  }

  public void setTextLink(List<TextLinkComponent> textLink) {
    this.textLink = textLink;
  }

  public CreativeComponents jumpInfo(List<JumpinfoComponent> jumpInfo) {
    this.jumpInfo = jumpInfo;
    return this;
  }

  public CreativeComponents addJumpInfoItem(JumpinfoComponent jumpInfoItem) {
    if (this.jumpInfo == null) {
      this.jumpInfo = new ArrayList<JumpinfoComponent>();
    }
    this.jumpInfo.add(jumpInfoItem);
    return this;
  }

  /**
   * Get jumpInfo
   *
   * @return jumpInfo
   */
  @ApiModelProperty(value = "")
  public List<JumpinfoComponent> getJumpInfo() {
    return jumpInfo;
  }

  public void setJumpInfo(List<JumpinfoComponent> jumpInfo) {
    this.jumpInfo = jumpInfo;
  }

  public CreativeComponents endPage(List<EndPageComponent> endPage) {
    this.endPage = endPage;
    return this;
  }

  public CreativeComponents addEndPageItem(EndPageComponent endPageItem) {
    if (this.endPage == null) {
      this.endPage = new ArrayList<EndPageComponent>();
    }
    this.endPage.add(endPageItem);
    return this;
  }

  /**
   * Get endPage
   *
   * @return endPage
   */
  @ApiModelProperty(value = "")
  public List<EndPageComponent> getEndPage() {
    return endPage;
  }

  public void setEndPage(List<EndPageComponent> endPage) {
    this.endPage = endPage;
  }

  public CreativeComponents livingDesc(List<LivingDescComponent> livingDesc) {
    this.livingDesc = livingDesc;
    return this;
  }

  public CreativeComponents addLivingDescItem(LivingDescComponent livingDescItem) {
    if (this.livingDesc == null) {
      this.livingDesc = new ArrayList<LivingDescComponent>();
    }
    this.livingDesc.add(livingDescItem);
    return this;
  }

  /**
   * Get livingDesc
   *
   * @return livingDesc
   */
  @ApiModelProperty(value = "")
  public List<LivingDescComponent> getLivingDesc() {
    return livingDesc;
  }

  public void setLivingDesc(List<LivingDescComponent> livingDesc) {
    this.livingDesc = livingDesc;
  }

  public CreativeComponents wechatChannels(List<WechatChannelsComponent> wechatChannels) {
    this.wechatChannels = wechatChannels;
    return this;
  }

  public CreativeComponents addWechatChannelsItem(WechatChannelsComponent wechatChannelsItem) {
    if (this.wechatChannels == null) {
      this.wechatChannels = new ArrayList<WechatChannelsComponent>();
    }
    this.wechatChannels.add(wechatChannelsItem);
    return this;
  }

  /**
   * Get wechatChannels
   *
   * @return wechatChannels
   */
  @ApiModelProperty(value = "")
  public List<WechatChannelsComponent> getWechatChannels() {
    return wechatChannels;
  }

  public void setWechatChannels(List<WechatChannelsComponent> wechatChannels) {
    this.wechatChannels = wechatChannels;
  }

  public CreativeComponents shortVideo(List<ShortVideoComponent> shortVideo) {
    this.shortVideo = shortVideo;
    return this;
  }

  public CreativeComponents addShortVideoItem(ShortVideoComponent shortVideoItem) {
    if (this.shortVideo == null) {
      this.shortVideo = new ArrayList<ShortVideoComponent>();
    }
    this.shortVideo.add(shortVideoItem);
    return this;
  }

  /**
   * Get shortVideo
   *
   * @return shortVideo
   */
  @ApiModelProperty(value = "")
  public List<ShortVideoComponent> getShortVideo() {
    return shortVideo;
  }

  public void setShortVideo(List<ShortVideoComponent> shortVideo) {
    this.shortVideo = shortVideo;
  }

  public CreativeComponents elementStory(List<ElementStoryComponent> elementStory) {
    this.elementStory = elementStory;
    return this;
  }

  public CreativeComponents addElementStoryItem(ElementStoryComponent elementStoryItem) {
    if (this.elementStory == null) {
      this.elementStory = new ArrayList<ElementStoryComponent>();
    }
    this.elementStory.add(elementStoryItem);
    return this;
  }

  /**
   * Get elementStory
   *
   * @return elementStory
   */
  @ApiModelProperty(value = "")
  public List<ElementStoryComponent> getElementStory() {
    return elementStory;
  }

  public void setElementStory(List<ElementStoryComponent> elementStory) {
    this.elementStory = elementStory;
  }

  public CreativeComponents wxgamePlayablePage(
      List<WxgamePlayablePageComponent> wxgamePlayablePage) {
    this.wxgamePlayablePage = wxgamePlayablePage;
    return this;
  }

  public CreativeComponents addWxgamePlayablePageItem(
      WxgamePlayablePageComponent wxgamePlayablePageItem) {
    if (this.wxgamePlayablePage == null) {
      this.wxgamePlayablePage = new ArrayList<WxgamePlayablePageComponent>();
    }
    this.wxgamePlayablePage.add(wxgamePlayablePageItem);
    return this;
  }

  /**
   * Get wxgamePlayablePage
   *
   * @return wxgamePlayablePage
   */
  @ApiModelProperty(value = "")
  public List<WxgamePlayablePageComponent> getWxgamePlayablePage() {
    return wxgamePlayablePage;
  }

  public void setWxgamePlayablePage(List<WxgamePlayablePageComponent> wxgamePlayablePage) {
    this.wxgamePlayablePage = wxgamePlayablePage;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreativeComponents creativeComponents = (CreativeComponents) o;
    return Objects.equals(this.title, creativeComponents.title)
        && Objects.equals(this.description, creativeComponents.description)
        && Objects.equals(this.image, creativeComponents.image)
        && Objects.equals(this.imageList, creativeComponents.imageList)
        && Objects.equals(this.video, creativeComponents.video)
        && Objects.equals(this.brand, creativeComponents.brand)
        && Objects.equals(this.consult, creativeComponents.consult)
        && Objects.equals(this.phone, creativeComponents.phone)
        && Objects.equals(this.form, creativeComponents.form)
        && Objects.equals(this.actionButton, creativeComponents.actionButton)
        && Objects.equals(this.chosenButton, creativeComponents.chosenButton)
        && Objects.equals(this.label, creativeComponents.label)
        && Objects.equals(this.showData, creativeComponents.showData)
        && Objects.equals(this.marketingPendant, creativeComponents.marketingPendant)
        && Objects.equals(this.appGiftPackCode, creativeComponents.appGiftPackCode)
        && Objects.equals(this.shopImage, creativeComponents.shopImage)
        && Objects.equals(this.countDown, creativeComponents.countDown)
        && Objects.equals(this.barrage, creativeComponents.barrage)
        && Objects.equals(this.floatingZone, creativeComponents.floatingZone)
        && Objects.equals(this.textLink, creativeComponents.textLink)
        && Objects.equals(this.jumpInfo, creativeComponents.jumpInfo)
        && Objects.equals(this.endPage, creativeComponents.endPage)
        && Objects.equals(this.livingDesc, creativeComponents.livingDesc)
        && Objects.equals(this.wechatChannels, creativeComponents.wechatChannels)
        && Objects.equals(this.shortVideo, creativeComponents.shortVideo)
        && Objects.equals(this.elementStory, creativeComponents.elementStory)
        && Objects.equals(this.wxgamePlayablePage, creativeComponents.wxgamePlayablePage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        title,
        description,
        image,
        imageList,
        video,
        brand,
        consult,
        phone,
        form,
        actionButton,
        chosenButton,
        label,
        showData,
        marketingPendant,
        appGiftPackCode,
        shopImage,
        countDown,
        barrage,
        floatingZone,
        textLink,
        jumpInfo,
        endPage,
        livingDesc,
        wechatChannels,
        shortVideo,
        elementStory,
        wxgamePlayablePage);
  }

  @Override
  public String toString() {
    Gson gson = new Gson();
    return gson.toJson(this);
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
