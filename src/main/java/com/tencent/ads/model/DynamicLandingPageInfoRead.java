/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.model;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/** dc落地页信息 */
@ApiModel(description = "dc落地页信息")
public class DynamicLandingPageInfoRead {
  @SerializedName("page_type")
  private PageTypeRead pageType = null;

  @SerializedName("page_spec")
  private DynamicCreativePageSpec pageSpec = null;

  @SerializedName("link_page_type")
  private LinkPageType linkPageType = null;

  @SerializedName("link_name_type")
  private LinkUrlLinkNameType linkNameType = null;

  @SerializedName("link_page_spec")
  private LinkPageSpec linkPageSpec = null;

  @SerializedName("qq_mini_game_tracking_query_string")
  private String qqMiniGameTrackingQueryString = null;

  @SerializedName("share_content_spec")
  private ShareContentSpec shareContentSpec = null;

  @SerializedName("webview_url")
  private String webviewUrl = null;

  @SerializedName("simple_canvas_sub_type")
  private SimpleCanvasSubType simpleCanvasSubType = null;

  @SerializedName("link_name_text")
  private String linkNameText = null;

  @SerializedName("button_text_jump_info")
  private LandingPageStructure buttonTextJumpInfo = null;

  @SerializedName("channels_shop_product_spec")
  private ChannelsShopProductSpec channelsShopProductSpec = null;

  public DynamicLandingPageInfoRead pageType(PageTypeRead pageType) {
    this.pageType = pageType;
    return this;
  }

  /**
   * Get pageType
   *
   * @return pageType
   */
  @ApiModelProperty(value = "")
  public PageTypeRead getPageType() {
    return pageType;
  }

  public void setPageType(PageTypeRead pageType) {
    this.pageType = pageType;
  }

  public DynamicLandingPageInfoRead pageSpec(DynamicCreativePageSpec pageSpec) {
    this.pageSpec = pageSpec;
    return this;
  }

  /**
   * Get pageSpec
   *
   * @return pageSpec
   */
  @ApiModelProperty(value = "")
  public DynamicCreativePageSpec getPageSpec() {
    return pageSpec;
  }

  public void setPageSpec(DynamicCreativePageSpec pageSpec) {
    this.pageSpec = pageSpec;
  }

  public DynamicLandingPageInfoRead linkPageType(LinkPageType linkPageType) {
    this.linkPageType = linkPageType;
    return this;
  }

  /**
   * Get linkPageType
   *
   * @return linkPageType
   */
  @ApiModelProperty(value = "")
  public LinkPageType getLinkPageType() {
    return linkPageType;
  }

  public void setLinkPageType(LinkPageType linkPageType) {
    this.linkPageType = linkPageType;
  }

  public DynamicLandingPageInfoRead linkNameType(LinkUrlLinkNameType linkNameType) {
    this.linkNameType = linkNameType;
    return this;
  }

  /**
   * Get linkNameType
   *
   * @return linkNameType
   */
  @ApiModelProperty(value = "")
  public LinkUrlLinkNameType getLinkNameType() {
    return linkNameType;
  }

  public void setLinkNameType(LinkUrlLinkNameType linkNameType) {
    this.linkNameType = linkNameType;
  }

  public DynamicLandingPageInfoRead linkPageSpec(LinkPageSpec linkPageSpec) {
    this.linkPageSpec = linkPageSpec;
    return this;
  }

  /**
   * Get linkPageSpec
   *
   * @return linkPageSpec
   */
  @ApiModelProperty(value = "")
  public LinkPageSpec getLinkPageSpec() {
    return linkPageSpec;
  }

  public void setLinkPageSpec(LinkPageSpec linkPageSpec) {
    this.linkPageSpec = linkPageSpec;
  }

  public DynamicLandingPageInfoRead qqMiniGameTrackingQueryString(
      String qqMiniGameTrackingQueryString) {
    this.qqMiniGameTrackingQueryString = qqMiniGameTrackingQueryString;
    return this;
  }

  /**
   * Get qqMiniGameTrackingQueryString
   *
   * @return qqMiniGameTrackingQueryString
   */
  @ApiModelProperty(value = "")
  public String getQqMiniGameTrackingQueryString() {
    return qqMiniGameTrackingQueryString;
  }

  public void setQqMiniGameTrackingQueryString(String qqMiniGameTrackingQueryString) {
    this.qqMiniGameTrackingQueryString = qqMiniGameTrackingQueryString;
  }

  public DynamicLandingPageInfoRead shareContentSpec(ShareContentSpec shareContentSpec) {
    this.shareContentSpec = shareContentSpec;
    return this;
  }

  /**
   * Get shareContentSpec
   *
   * @return shareContentSpec
   */
  @ApiModelProperty(value = "")
  public ShareContentSpec getShareContentSpec() {
    return shareContentSpec;
  }

  public void setShareContentSpec(ShareContentSpec shareContentSpec) {
    this.shareContentSpec = shareContentSpec;
  }

  public DynamicLandingPageInfoRead webviewUrl(String webviewUrl) {
    this.webviewUrl = webviewUrl;
    return this;
  }

  /**
   * Get webviewUrl
   *
   * @return webviewUrl
   */
  @ApiModelProperty(value = "")
  public String getWebviewUrl() {
    return webviewUrl;
  }

  public void setWebviewUrl(String webviewUrl) {
    this.webviewUrl = webviewUrl;
  }

  public DynamicLandingPageInfoRead simpleCanvasSubType(SimpleCanvasSubType simpleCanvasSubType) {
    this.simpleCanvasSubType = simpleCanvasSubType;
    return this;
  }

  /**
   * Get simpleCanvasSubType
   *
   * @return simpleCanvasSubType
   */
  @ApiModelProperty(value = "")
  public SimpleCanvasSubType getSimpleCanvasSubType() {
    return simpleCanvasSubType;
  }

  public void setSimpleCanvasSubType(SimpleCanvasSubType simpleCanvasSubType) {
    this.simpleCanvasSubType = simpleCanvasSubType;
  }

  public DynamicLandingPageInfoRead linkNameText(String linkNameText) {
    this.linkNameText = linkNameText;
    return this;
  }

  /**
   * Get linkNameText
   *
   * @return linkNameText
   */
  @ApiModelProperty(value = "")
  public String getLinkNameText() {
    return linkNameText;
  }

  public void setLinkNameText(String linkNameText) {
    this.linkNameText = linkNameText;
  }

  public DynamicLandingPageInfoRead buttonTextJumpInfo(LandingPageStructure buttonTextJumpInfo) {
    this.buttonTextJumpInfo = buttonTextJumpInfo;
    return this;
  }

  /**
   * Get buttonTextJumpInfo
   *
   * @return buttonTextJumpInfo
   */
  @ApiModelProperty(value = "")
  public LandingPageStructure getButtonTextJumpInfo() {
    return buttonTextJumpInfo;
  }

  public void setButtonTextJumpInfo(LandingPageStructure buttonTextJumpInfo) {
    this.buttonTextJumpInfo = buttonTextJumpInfo;
  }

  public DynamicLandingPageInfoRead channelsShopProductSpec(
      ChannelsShopProductSpec channelsShopProductSpec) {
    this.channelsShopProductSpec = channelsShopProductSpec;
    return this;
  }

  /**
   * Get channelsShopProductSpec
   *
   * @return channelsShopProductSpec
   */
  @ApiModelProperty(value = "")
  public ChannelsShopProductSpec getChannelsShopProductSpec() {
    return channelsShopProductSpec;
  }

  public void setChannelsShopProductSpec(ChannelsShopProductSpec channelsShopProductSpec) {
    this.channelsShopProductSpec = channelsShopProductSpec;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DynamicLandingPageInfoRead dynamicLandingPageInfoRead = (DynamicLandingPageInfoRead) o;
    return Objects.equals(this.pageType, dynamicLandingPageInfoRead.pageType)
        && Objects.equals(this.pageSpec, dynamicLandingPageInfoRead.pageSpec)
        && Objects.equals(this.linkPageType, dynamicLandingPageInfoRead.linkPageType)
        && Objects.equals(this.linkNameType, dynamicLandingPageInfoRead.linkNameType)
        && Objects.equals(this.linkPageSpec, dynamicLandingPageInfoRead.linkPageSpec)
        && Objects.equals(
            this.qqMiniGameTrackingQueryString,
            dynamicLandingPageInfoRead.qqMiniGameTrackingQueryString)
        && Objects.equals(this.shareContentSpec, dynamicLandingPageInfoRead.shareContentSpec)
        && Objects.equals(this.webviewUrl, dynamicLandingPageInfoRead.webviewUrl)
        && Objects.equals(this.simpleCanvasSubType, dynamicLandingPageInfoRead.simpleCanvasSubType)
        && Objects.equals(this.linkNameText, dynamicLandingPageInfoRead.linkNameText)
        && Objects.equals(this.buttonTextJumpInfo, dynamicLandingPageInfoRead.buttonTextJumpInfo)
        && Objects.equals(
            this.channelsShopProductSpec, dynamicLandingPageInfoRead.channelsShopProductSpec);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        pageType,
        pageSpec,
        linkPageType,
        linkNameType,
        linkPageSpec,
        qqMiniGameTrackingQueryString,
        shareContentSpec,
        webviewUrl,
        simpleCanvasSubType,
        linkNameText,
        buttonTextJumpInfo,
        channelsShopProductSpec);
  }

  @Override
  public String toString() {
    Gson gson = new Gson();
    return gson.toJson(this);
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
