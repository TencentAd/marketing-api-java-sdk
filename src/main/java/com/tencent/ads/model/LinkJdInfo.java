/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.model;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** 京东POP商户投放商品信息 */
@ApiModel(description = "京东POP商户投放商品信息")
public class LinkJdInfo {
  @SerializedName("ecommerce_type")
  private EcommerceType ecommerceType = null;

  @SerializedName("item_id")
  private String itemId = null;

  @SerializedName("shop_id")
  private String shopId = null;

  @SerializedName("item_category")
  private List<Category> itemCategory = null;

  @SerializedName("shop_category")
  private List<Category> shopCategory = null;

  public LinkJdInfo ecommerceType(EcommerceType ecommerceType) {
    this.ecommerceType = ecommerceType;
    return this;
  }

  /**
   * Get ecommerceType
   *
   * @return ecommerceType
   */
  @ApiModelProperty(value = "")
  public EcommerceType getEcommerceType() {
    return ecommerceType;
  }

  public void setEcommerceType(EcommerceType ecommerceType) {
    this.ecommerceType = ecommerceType;
  }

  public LinkJdInfo itemId(String itemId) {
    this.itemId = itemId;
    return this;
  }

  /**
   * Get itemId
   *
   * @return itemId
   */
  @ApiModelProperty(value = "")
  public String getItemId() {
    return itemId;
  }

  public void setItemId(String itemId) {
    this.itemId = itemId;
  }

  public LinkJdInfo shopId(String shopId) {
    this.shopId = shopId;
    return this;
  }

  /**
   * Get shopId
   *
   * @return shopId
   */
  @ApiModelProperty(value = "")
  public String getShopId() {
    return shopId;
  }

  public void setShopId(String shopId) {
    this.shopId = shopId;
  }

  public LinkJdInfo itemCategory(List<Category> itemCategory) {
    this.itemCategory = itemCategory;
    return this;
  }

  public LinkJdInfo addItemCategoryItem(Category itemCategoryItem) {
    if (this.itemCategory == null) {
      this.itemCategory = new ArrayList<Category>();
    }
    this.itemCategory.add(itemCategoryItem);
    return this;
  }

  /**
   * Get itemCategory
   *
   * @return itemCategory
   */
  @ApiModelProperty(value = "")
  public List<Category> getItemCategory() {
    return itemCategory;
  }

  public void setItemCategory(List<Category> itemCategory) {
    this.itemCategory = itemCategory;
  }

  public LinkJdInfo shopCategory(List<Category> shopCategory) {
    this.shopCategory = shopCategory;
    return this;
  }

  public LinkJdInfo addShopCategoryItem(Category shopCategoryItem) {
    if (this.shopCategory == null) {
      this.shopCategory = new ArrayList<Category>();
    }
    this.shopCategory.add(shopCategoryItem);
    return this;
  }

  /**
   * Get shopCategory
   *
   * @return shopCategory
   */
  @ApiModelProperty(value = "")
  public List<Category> getShopCategory() {
    return shopCategory;
  }

  public void setShopCategory(List<Category> shopCategory) {
    this.shopCategory = shopCategory;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkJdInfo linkJdInfo = (LinkJdInfo) o;
    return Objects.equals(this.ecommerceType, linkJdInfo.ecommerceType)
        && Objects.equals(this.itemId, linkJdInfo.itemId)
        && Objects.equals(this.shopId, linkJdInfo.shopId)
        && Objects.equals(this.itemCategory, linkJdInfo.itemCategory)
        && Objects.equals(this.shopCategory, linkJdInfo.shopCategory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ecommerceType, itemId, shopId, itemCategory, shopCategory);
  }

  @Override
  public String toString() {
    Gson gson = new Gson();
    return gson.toJson(this);
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
