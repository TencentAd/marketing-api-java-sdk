/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.api;

import com.google.gson.reflect.TypeToken;
import com.tencent.ads.ApiCallback;
import com.tencent.ads.ApiClient;
import com.tencent.ads.ApiException;
import com.tencent.ads.ApiResponse;
import com.tencent.ads.Configuration;
import com.tencent.ads.Pair;
import com.tencent.ads.ProgressRequestBody;
import com.tencent.ads.ProgressResponseBody;
import com.tencent.ads.model.UserActionSetsAddRequest;
import com.tencent.ads.model.UserActionSetsAddResponse;
import com.tencent.ads.model.UserActionSetsGetResponse;
import java.io.IOException;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UserActionSetsApi {
  private ApiClient apiClient;

  public UserActionSetsApi() {
    this(Configuration.getDefaultApiClient());
  }

  public UserActionSetsApi(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * Build call for userActionSetsAdd
   *
   * @param data (required)
   * @param progressListener Progress listener
   * @param progressRequestListener Progress request listener
   * @return Call to execute
   * @throws ApiException If fail to serialize the request body object
   */
  public com.squareup.okhttp.Call userActionSetsAddCall(
      UserActionSetsAddRequest data,
      final ProgressResponseBody.ProgressListener progressListener,
      final ProgressRequestBody.ProgressRequestListener progressRequestListener,
      String... headerPair)
      throws ApiException {

    Object localVarPostBody = data;

    // create path and map variables
    String localVarPath = "/user_action_sets/add";

    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

    Map<String, String> localVarHeaderParams = new HashMap<String, String>();

    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    final String[] localVarAccepts = {"application/json"};
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
    if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

    final String[] localVarContentTypes = {"application/json", "application/xml"};
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
    localVarHeaderParams.put("Content-Type", localVarContentType);

    if (headerPair != null && headerPair.length > 0) {
      if (headerPair.length % 2 != 0) {
        throw new UnsupportedOperationException("Parameter headerPair must be paired");
      }
      for (int i = 0; i < headerPair.length / 2; i++) {
        localVarHeaderParams.put(headerPair[i], headerPair[i * 2 + 1]);
      }
    }

    if (progressListener != null) {
      apiClient
          .getHttpClient()
          .networkInterceptors()
          .add(
              new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(
                    com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                  com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                  return originalResponse
                      .newBuilder()
                      .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                      .build();
                }
              });
    }

    String[] localVarAuthNames = new String[] {"accessToken", "nonce", "timestamp"};
    return apiClient.buildCall(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarFormParams,
        localVarAuthNames,
        progressRequestListener);
  }

  @SuppressWarnings("rawtypes")
  private com.squareup.okhttp.Call userActionSetsAddValidateBeforeCall(
      UserActionSetsAddRequest data,
      final ProgressResponseBody.ProgressListener progressListener,
      final ProgressRequestBody.ProgressRequestListener progressRequestListener,
      String... headerPair)
      throws ApiException {

    // verify the required parameter 'data' is set
    if (data == null) {
      throw new ApiException(
          "Missing the required parameter 'data' when calling userActionSetsAdd(Async)");
    }

    com.squareup.okhttp.Call call =
        userActionSetsAddCall(data, progressListener, progressRequestListener, headerPair);
    return call;
  }

  /**
   * 创建用户行为数据源
   *
   * @param data (required)
   * @return UserActionSetsAddResponse
   * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
   *     response body
   */
  public UserActionSetsAddResponse userActionSetsAdd(
      UserActionSetsAddRequest data, String... headerPair) throws ApiException {
    ApiResponse<UserActionSetsAddResponse> resp = userActionSetsAddWithHttpInfo(data, headerPair);
    return resp.getData();
  }

  /**
   * 创建用户行为数据源
   *
   * @param data (required)
   * @return ApiResponse&lt;UserActionSetsAddResponse&gt;
   * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
   *     response body
   */
  public ApiResponse<UserActionSetsAddResponse> userActionSetsAddWithHttpInfo(
      UserActionSetsAddRequest data, String... headerPair) throws ApiException {
    com.squareup.okhttp.Call call =
        userActionSetsAddValidateBeforeCall(data, null, null, headerPair);
    Type localVarReturnType = new TypeToken<UserActionSetsAddResponse>() {}.getType();
    return apiClient.execute(call, localVarReturnType);
  }

  /**
   * 创建用户行为数据源 (asynchronously)
   *
   * @param data (required)
   * @param callback The callback to be executed when the API call finishes
   * @return The request call
   * @throws ApiException If fail to process the API call, e.g. serializing the request body object
   */
  public com.squareup.okhttp.Call userActionSetsAddAsync(
      UserActionSetsAddRequest data,
      final ApiCallback<UserActionSetsAddResponse> callback,
      String... headerPair)
      throws ApiException {

    ProgressResponseBody.ProgressListener progressListener = null;
    ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

    if (callback != null) {
      progressListener =
          new ProgressResponseBody.ProgressListener() {
            @Override
            public void update(long bytesRead, long contentLength, boolean done) {
              callback.onDownloadProgress(bytesRead, contentLength, done);
            }
          };

      progressRequestListener =
          new ProgressRequestBody.ProgressRequestListener() {
            @Override
            public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
              callback.onUploadProgress(bytesWritten, contentLength, done);
            }
          };
    }

    com.squareup.okhttp.Call call =
        userActionSetsAddValidateBeforeCall(
            data, progressListener, progressRequestListener, headerPair);
    Type localVarReturnType = new TypeToken<UserActionSetsAddResponse>() {}.getType();
    apiClient.executeAsync(call, localVarReturnType, callback);
    return call;
  }
  /**
   * Build call for userActionSetsGet
   *
   * @param accountId (required)
   * @param userActionSetId (optional)
   * @param type (optional)
   * @param mobileAppId (optional)
   * @param wechatAppId (optional)
   * @param name (optional)
   * @param includePermission (optional)
   * @param fields 返回参数的字段列表 (optional)
   * @param progressListener Progress listener
   * @param progressRequestListener Progress request listener
   * @return Call to execute
   * @throws ApiException If fail to serialize the request body object
   */
  public com.squareup.okhttp.Call userActionSetsGetCall(
      Long accountId,
      Long userActionSetId,
      List<String> type,
      Long mobileAppId,
      String wechatAppId,
      String name,
      Boolean includePermission,
      List<String> fields,
      final ProgressResponseBody.ProgressListener progressListener,
      final ProgressRequestBody.ProgressRequestListener progressRequestListener,
      String... headerPair)
      throws ApiException {

    Object localVarPostBody = null;

    // create path and map variables
    String localVarPath = "/user_action_sets/get";

    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    if (accountId != null)
      localVarQueryParams.addAll(apiClient.parameterToPair("account_id", accountId));
    if (userActionSetId != null)
      localVarQueryParams.addAll(apiClient.parameterToPair("user_action_set_id", userActionSetId));
    if (type != null)
      localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "type", type));
    if (mobileAppId != null)
      localVarQueryParams.addAll(apiClient.parameterToPair("mobile_app_id", mobileAppId));
    if (wechatAppId != null)
      localVarQueryParams.addAll(apiClient.parameterToPair("wechat_app_id", wechatAppId));
    if (name != null) localVarQueryParams.addAll(apiClient.parameterToPair("name", name));
    if (includePermission != null)
      localVarQueryParams.addAll(
          apiClient.parameterToPair("include_permission", includePermission));
    if (fields != null)
      localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "fields", fields));

    Map<String, String> localVarHeaderParams = new HashMap<String, String>();

    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    final String[] localVarAccepts = {"application/json"};
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
    if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

    final String[] localVarContentTypes = {"text/plain"};
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
    localVarHeaderParams.put("Content-Type", localVarContentType);

    if (headerPair != null && headerPair.length > 0) {
      if (headerPair.length % 2 != 0) {
        throw new UnsupportedOperationException("Parameter headerPair must be paired");
      }
      for (int i = 0; i < headerPair.length / 2; i++) {
        localVarHeaderParams.put(headerPair[i], headerPair[i * 2 + 1]);
      }
    }

    if (progressListener != null) {
      apiClient
          .getHttpClient()
          .networkInterceptors()
          .add(
              new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(
                    com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                  com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                  return originalResponse
                      .newBuilder()
                      .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                      .build();
                }
              });
    }

    String[] localVarAuthNames = new String[] {"accessToken", "nonce", "timestamp"};
    return apiClient.buildCall(
        localVarPath,
        "GET",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarFormParams,
        localVarAuthNames,
        progressRequestListener);
  }

  @SuppressWarnings("rawtypes")
  private com.squareup.okhttp.Call userActionSetsGetValidateBeforeCall(
      Long accountId,
      Long userActionSetId,
      List<String> type,
      Long mobileAppId,
      String wechatAppId,
      String name,
      Boolean includePermission,
      List<String> fields,
      final ProgressResponseBody.ProgressListener progressListener,
      final ProgressRequestBody.ProgressRequestListener progressRequestListener,
      String... headerPair)
      throws ApiException {

    // verify the required parameter 'accountId' is set
    if (accountId == null) {
      throw new ApiException(
          "Missing the required parameter 'accountId' when calling userActionSetsGet(Async)");
    }

    com.squareup.okhttp.Call call =
        userActionSetsGetCall(
            accountId,
            userActionSetId,
            type,
            mobileAppId,
            wechatAppId,
            name,
            includePermission,
            fields,
            progressListener,
            progressRequestListener,
            headerPair);
    return call;
  }

  /**
   * 获取用户行为数据源
   *
   * @param accountId (required)
   * @param userActionSetId (optional)
   * @param type (optional)
   * @param mobileAppId (optional)
   * @param wechatAppId (optional)
   * @param name (optional)
   * @param includePermission (optional)
   * @param fields 返回参数的字段列表 (optional)
   * @return UserActionSetsGetResponse
   * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
   *     response body
   */
  public UserActionSetsGetResponse userActionSetsGet(
      Long accountId,
      Long userActionSetId,
      List<String> type,
      Long mobileAppId,
      String wechatAppId,
      String name,
      Boolean includePermission,
      List<String> fields,
      String... headerPair)
      throws ApiException {
    ApiResponse<UserActionSetsGetResponse> resp =
        userActionSetsGetWithHttpInfo(
            accountId,
            userActionSetId,
            type,
            mobileAppId,
            wechatAppId,
            name,
            includePermission,
            fields,
            headerPair);
    return resp.getData();
  }

  /**
   * 获取用户行为数据源
   *
   * @param accountId (required)
   * @param userActionSetId (optional)
   * @param type (optional)
   * @param mobileAppId (optional)
   * @param wechatAppId (optional)
   * @param name (optional)
   * @param includePermission (optional)
   * @param fields 返回参数的字段列表 (optional)
   * @return ApiResponse&lt;UserActionSetsGetResponse&gt;
   * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
   *     response body
   */
  public ApiResponse<UserActionSetsGetResponse> userActionSetsGetWithHttpInfo(
      Long accountId,
      Long userActionSetId,
      List<String> type,
      Long mobileAppId,
      String wechatAppId,
      String name,
      Boolean includePermission,
      List<String> fields,
      String... headerPair)
      throws ApiException {
    com.squareup.okhttp.Call call =
        userActionSetsGetValidateBeforeCall(
            accountId,
            userActionSetId,
            type,
            mobileAppId,
            wechatAppId,
            name,
            includePermission,
            fields,
            null,
            null,
            headerPair);
    Type localVarReturnType = new TypeToken<UserActionSetsGetResponse>() {}.getType();
    return apiClient.execute(call, localVarReturnType);
  }

  /**
   * 获取用户行为数据源 (asynchronously)
   *
   * @param accountId (required)
   * @param userActionSetId (optional)
   * @param type (optional)
   * @param mobileAppId (optional)
   * @param wechatAppId (optional)
   * @param name (optional)
   * @param includePermission (optional)
   * @param fields 返回参数的字段列表 (optional)
   * @param callback The callback to be executed when the API call finishes
   * @return The request call
   * @throws ApiException If fail to process the API call, e.g. serializing the request body object
   */
  public com.squareup.okhttp.Call userActionSetsGetAsync(
      Long accountId,
      Long userActionSetId,
      List<String> type,
      Long mobileAppId,
      String wechatAppId,
      String name,
      Boolean includePermission,
      List<String> fields,
      final ApiCallback<UserActionSetsGetResponse> callback,
      String... headerPair)
      throws ApiException {

    ProgressResponseBody.ProgressListener progressListener = null;
    ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

    if (callback != null) {
      progressListener =
          new ProgressResponseBody.ProgressListener() {
            @Override
            public void update(long bytesRead, long contentLength, boolean done) {
              callback.onDownloadProgress(bytesRead, contentLength, done);
            }
          };

      progressRequestListener =
          new ProgressRequestBody.ProgressRequestListener() {
            @Override
            public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
              callback.onUploadProgress(bytesWritten, contentLength, done);
            }
          };
    }

    com.squareup.okhttp.Call call =
        userActionSetsGetValidateBeforeCall(
            accountId,
            userActionSetId,
            type,
            mobileAppId,
            wechatAppId,
            name,
            includePermission,
            fields,
            progressListener,
            progressRequestListener,
            headerPair);
    Type localVarReturnType = new TypeToken<UserActionSetsGetResponse>() {}.getType();
    apiClient.executeAsync(call, localVarReturnType, callback);
    return call;
  }
}
