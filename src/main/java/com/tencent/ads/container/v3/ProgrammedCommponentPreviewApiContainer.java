/*
 * Marketing API
 * Marketing API
 *
 * OpenAPI spec version: 3.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tencent.ads.container.v3;

import com.google.inject.Inject;
import com.tencent.ads.ApiContainer;
import com.tencent.ads.ApiException;
import com.tencent.ads.Pair;
import com.tencent.ads.anno.*;
import com.tencent.ads.api.v3.ProgrammedCommponentPreviewApi;
import com.tencent.ads.exception.TencentAdsResponseException;
import com.tencent.ads.model.v3.ProgrammedCommponentPreviewAddRequest;
import com.tencent.ads.model.v3.ProgrammedCommponentPreviewAddResponse;
import com.tencent.ads.model.v3.ProgrammedCommponentPreviewAddResponseData;
import com.tencent.ads.model.v3.ProgrammedCommponentPreviewDeleteRequest;
import com.tencent.ads.model.v3.ProgrammedCommponentPreviewDeleteResponse;
import com.tencent.ads.model.v3.ProgrammedCommponentPreviewDeleteResponseData;
import com.tencent.ads.model.v3.ProgrammedCommponentPreviewGetResponse;
import com.tencent.ads.model.v3.ProgrammedCommponentPreviewGetResponseData;
import com.tencent.ads.model.v3.ProgrammedCommponentPreviewUpdateRequest;
import com.tencent.ads.model.v3.ProgrammedCommponentPreviewUpdateResponse;
import com.tencent.ads.model.v3.ProgrammedCommponentPreviewUpdateResponseData;
import java.util.List;

public class ProgrammedCommponentPreviewApiContainer extends ApiContainer {

  @Inject ProgrammedCommponentPreviewApi api;

  /**
   * 组件化创意衍生预览创建接口
   *
   * @param data (required)
   * @return ProgrammedCommponentPreviewAddResponse
   * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
   *     response body
   */
  public ProgrammedCommponentPreviewAddResponseData programmedCommponentPreviewAdd(
      ProgrammedCommponentPreviewAddRequest data, Pair... headerPair)
      throws ApiException, TencentAdsResponseException {
    ProgrammedCommponentPreviewAddResponse resp =
        api.programmedCommponentPreviewAdd(data, headerPair);
    handleResponse(gson.toJson(resp));
    return resp.getData();
  }

  /**
   * 组件化创意衍生预览删除接口
   *
   * @param data (required)
   * @return ProgrammedCommponentPreviewDeleteResponse
   * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
   *     response body
   */
  public ProgrammedCommponentPreviewDeleteResponseData programmedCommponentPreviewDelete(
      ProgrammedCommponentPreviewDeleteRequest data, Pair... headerPair)
      throws ApiException, TencentAdsResponseException {
    ProgrammedCommponentPreviewDeleteResponse resp =
        api.programmedCommponentPreviewDelete(data, headerPair);
    handleResponse(gson.toJson(resp));
    return resp.getData();
  }

  /**
   * 组件化创意衍生预览查询接口
   *
   * @param accountId (required)
   * @param materialDeriveId (required)
   * @param fields 返回参数的字段列表 (optional)
   * @return ProgrammedCommponentPreviewGetResponse
   * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
   *     response body
   */
  public ProgrammedCommponentPreviewGetResponseData programmedCommponentPreviewGet(
      Long accountId, Long materialDeriveId, List<String> fields, Pair... headerPair)
      throws ApiException, TencentAdsResponseException {
    ProgrammedCommponentPreviewGetResponse resp =
        api.programmedCommponentPreviewGet(accountId, materialDeriveId, fields, headerPair);
    handleResponse(gson.toJson(resp));
    return resp.getData();
  }

  /**
   * 组件化创意衍生预览更新接口
   *
   * @param data (required)
   * @return ProgrammedCommponentPreviewUpdateResponse
   * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
   *     response body
   */
  public ProgrammedCommponentPreviewUpdateResponseData programmedCommponentPreviewUpdate(
      ProgrammedCommponentPreviewUpdateRequest data, Pair... headerPair)
      throws ApiException, TencentAdsResponseException {
    ProgrammedCommponentPreviewUpdateResponse resp =
        api.programmedCommponentPreviewUpdate(data, headerPair);
    handleResponse(gson.toJson(resp));
    return resp.getData();
  }
}
